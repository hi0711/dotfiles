[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("python3")'
on_cmd = 'Denite'
depend = ['neomru.vim']
on_event = 'Bufread'
hook_post_source = '''
  call denite#custom#var('file_rec', 'command',
        \ ['--follow', '--nocolor', '--nogroup', '-g', ''])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'final_opts', [])
  call denite#custom#var('grep', 'separator', [])
  call denite#custom#var('grep', 'default_opts',
        \ ['--nocolor', '--nogroup'])
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
depends = 'denite.nvim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = 'denite.nvim'
on_event = 'TextYankPost'

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# depend = 'context_filetype.vim'
# on_event = 'InsertEnter'
# hook_source = '''
#     let g:deoplete#enable_at_startup = 1
#     let g:deoplete#enable_ignore_case = 1
#     let g:deoplete#enable_smart_case = 1
#     " <S-TAB>: completion back.
#     inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
# '''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo ='Shougo/deol.nvim'

[[plugins]] # カーソル位置のコンテキストに合わせてファイルタイプを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # カーソル位置のコンテキストのファイルタイプを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # カラースキーム iceberg
repo = 'cocopon/iceberg.vim'
hook_add = '''
  au MyAutoCmd VimEnter * nested colorscheme iceberg
'''

[[plugins]] # pugプラグイン
repo = 'digitaltoad/vim-pug'

[[plugins]] #vue.jsプラグイン
repo = 'posva/vim-vue'

[[plugins]] #markdownプラグイン
repo = 'tpope/vim-markdown'
hook_add = '''
  let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']
  let g:markdown_minlines = 100
'''

[[plugins]] #Laravelプラグイン
repo = 'noahfrederick/vim-laravel'

[[plugins]] #bladeプラグイン
repo = 'jwalton512/vim-blade'

[[plugins]] # muchitプラグイン
repo = 'tmhedberg/matchit'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = { 
    \   'colorscheme': 'wombat'
    \}
'''

[[plugins]]
repo = 'vim-scripts/surround.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = '|'
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  vmap <Enter> <Plug>(EasyAlign)
  nmap ga <Plug>(EasyAlign)
'''

# [[plugins]]  # qfixhowmプラグイン
# repo = 'fuenor/qfixhowm'

[[plugins]]
repo = 'cocopon/vaffle.vim'
hook_add = '''
  let g:vaffle_auto_cd = 1
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'fuenor/JpFormat.vim'
hook_add = '''
  nnoremap gL :JpFormatAll!<CR>
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = [ 'html', 'css', 'pug', 'markdown', 'blade' ]

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
  vmap v <Plug>(expand_region_expand)
  vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
merged = '0'

[[plugins]]
repo ='vim-scripts/taglist.vim'
hook_add='''
  let Tlist_Highlight_Tag_On_BufEnter = 1
  let Tlist_Show_One_File = 1
'''

[[plugins]]
repo ='dense-analysis/ale'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  if !exists('g:tcomment_types')
      let g:tcomment_types = {}
  endif
  let g:tcomment_types['blade'] = '{{-- %s --}}'
'''

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
